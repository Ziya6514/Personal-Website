<%- include("../../views/partials/user/header") %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
><style>
    .order_table table {
    border-collapse: collapse;
    width: 100%;
}

.order_table th, 
.order_table td {
    border: 1px solid #ddd; /* Add side lines */
    padding: 8px;
}

.order_table th {
    background-color: #f4f4f4;
    font-weight: bold;
    text-align: center;
}

</style>

<section>
    <div class="container">
        <div class="row">
            <!-- Left Side -->
            <div class="col-md-6">
                <!-- Order Review Section -->
                <div class="order_review">
                    <div class="mb-20">
                        <h4>Products</h4>
                    </div>
                    <div class="table-responsive order_table text-center">
                        <table>
                            <thead>
                                <tr>
                                    <th>Image</th>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (cart && cart.items && cart.items.length > 0) { %>
                                    <% cart.items.forEach(item => { %>
                                        <tr>
                                            <td class="image product-thumbnail">
                                                <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="img-fluid" style="width: 80px; height: 80px; object-fit: cover;">
                                            </td>
                                            <td class="product-des product-name">
                                                <h5 class="product-name">
                                                    <a href="#"><%= item.productId.productName %></a>
                                                </h5>
                                                <p class="font-xs"><%= item.productId.category.name %> <br> <%= item.productId.brand %></p>
                                            </td>
                                            <td><%= item.quantity %></td>
                                            <td><%= item.productId.salePrice * item.quantity %></td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="4">No products found</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Right Side -->
            <div class="col-md-6">
                <!-- Address Section -->
                <div class="mb-4">
                    <h3>Select Address</h3>
                </div>
                <div class="mb-3">
                    <a href="/addAddress">
                        <button class="btn btn-primary w-100" style="background-color: green; border-color: green;">Add Address</button>
                    </a>
                </div>
                <% if (addresses && addresses.length > 0) { %>
                    <% addresses.forEach((address) => { %>
                        <div class="card mb-3">
                            <div class="form-check p-3">
                                <input 
                                    class="form-check-input" 
                                    type="radio" 
                                    name="selectedAddress" 
                                    value="<%= address._id %>" 
                                    id="addressRadio<%= address._id %>" 
                                    onclick="toggleAddressDetails('<%= address._id %>')">
                                <label class="form-check-label ml-2" for="addressRadio<%= address._id %>">
                                    <strong><%= address.name %></strong>, <%= address.city %>, <%= address.state %> - <%= address.pincode %>
                                </label>
                            </div>
                            <div class="card-body address-details" id="addressDetails<%= address._id %>" style="display: none;">
                                <p><%= address.phone %>, <%= address.altPhone %></p>
                                <div class="d-flex justify-content-between">
                                    <a href="/editAddress?id=<%= address._id %>" class="btn-small">Edit</a>
                                    <a href="/deleteAddress?id=<%= address._id %>" class="btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="card">
                        <div class="card-body">No address</div>
                    </div>
                <% } %>
                
                <!-- Payment Section -->
                <div class="payment_method mt-4 p-3" style="border: 1px solid #ddd; border-radius: 8px;">
                    <h5>Payment</h5>
                    <div class="custome-radio">
                        <input class="form-check-input payment" type="radio" value="cod" name="payment_option" id="CashOnDelivery">
                        <label class="form-check-label" for="CashOnDelivery">Cash on Delivery</label>
                    </div>
                    <div class="custome-radio">
                        <input class="form-check-input payment" type="radio" value="razorpay" name="payment_option" id="Razorpay">
                        <label class="form-check-label" for="Razorpay">Razorpay</label>
                    </div>
                    <div class="custome-radio">
                        <input class="form-check-input payment" type="radio" value="wallet" name="payment_option" id="wallet">
                        <label class="form-check-label" for="wallet">Wallet</label>
                    </div>
                </div>

                <!-- Total Section -->
                <div class="mt-4 p-3" style="border: 1px solid #ddd; border-radius: 8px;">
                    <h5>Total for All Products: <span id="totalValue">₹<%= grandTotal %></span></h5>
                    <button type="button" class="btn btn-success mt-3 w-100" onclick="placeOrder('<%= user._id %>')">Place Order</button>
                </div>
            </div>
        </div>
    </div>
</section>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    
<script>
 
    
  async function placeOrder(userId, productId) {
    let address = $("input[name='selectedAddress']:checked").val();
    let payment = $("input[name='payment_option']:checked").val();

    const sum = document.getElementById("totalValue").textContent;
    const numericValue = parseInt(sum.replace(/[^\d.]/g, ''));
    console.log(numericValue);

    if (!payment) {
        Swal.fire({
            title: 'NO PAYMENT FOUND!',
            text: 'Please select your Payment.',
            icon: 'error',
            timer: 3000,
        });
    } else if (!address) {
        Swal.fire({
            title: 'NO ADDRESS FOUND!',
            text: 'Please select your address.',
            icon: 'error',
            timer: 3000,
        });
    } else if (payment === "cod" && numericValue > 1000) {
        Swal.fire({
            title: 'COD Not Allowed!',
            text: 'Orders above ₹1000 are not allowed for Cash on Delivery (COD).',
            icon: 'error',
            timer: 3000,
        });
    } else {
        $.ajax({
            url: '/orderPlaced',
            method: 'POST',
            data: {
                totalPrice: numericValue,
                createdOn: new Date().getTime(),
                date: new Date(),
                addressId: address,
                payment: payment,
                discount: discount
            },
            success: function (response) {
                let orderId = response.order._id;
                if (response.method === "cod") {
                    Swal.fire({
                        title: "Order success",
                        text: "Order placed successfully",
                        icon: "success",
                        showCancelButton: true,
                        confirmButtonText: "view orders",
                        cancelButtonText: "continue shopping",
                        reverseButtons: true
                    }).then(function (result) {
                        console.log("result....",orderId)
                        if (result.value) {
                            location.href = `/orderDetails?id=${orderId}`;
                        
                        } else if (result.dismiss === "cancel") {
                            location.href = '/';
                        }
                    });
                } else if (response.method === "wallet") {
                    if (response.payment === true) {
                        Swal.fire({
                            title: "Order success",
                            text: "Order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                location.href = `/orderDetails?id=${orderId}`;
                            } else if (result.dismiss === "cancel") {
                                location.href = '/';
                            }
                        });
                    } else {
                        Swal.fire({
                            title: "Order failed",
                            text: "Wallet amount is not enough",
                            icon: "error",
                            showConfirmButton: true,
                        }).then(function (result) {
                            if (result.value) {
                                location.href = '/';
                            }
                        });
                    }
                } else if (response.method === "razorpay") {
                    let orderAmount = Math.round(numericValue * 100);
                    var options = {
                        "key": "rzp_test_In4tgyU5gotrDo",
                        "amount": orderAmount,
                        "currency": "INR",
                        "name": "Trend Setter",
                        "description": "Test Transaction",
                        "image": "https://firebasestorage.googleapis.com/v0/b/ecommerce-397a7.appspot.com/o/logo.jpg?alt=media&token=07b6be19-1ce8-4797-a3a0-f0eaeaafedad",
                        "order_id": response.razorPayOrder.id,
                        "handler": function (status) {
                            verifyPayment(response.razorPayOrder, status, response.order._id);
                        },
                        "prefill": {
                            "name": "Customer Name",
                            "email": "customer@example.com",
                            "contact": "9961618585"
                        },
                        "theme": {
                            "color": "#3399cc"
                        }
                    };
                    var rzp1 = new Razorpay(options);
                    rzp1.open();
                } else {
                    Swal.fire({
                        title: 'Error Occurred',
                        text: "Can't process order. An error occurred.",
                        icon: 'error',
                        timer: 5000
                    });
                }
            },
            error: function (err) {
                console.error('AJAX request failed:', err);
                Swal.fire({
                    title: 'Error',
                    text: 'Something went wrong. Please try again.',
                    icon: 'error',
                    timer: 3000,
                });
            }
        });
    }
}

// Add error handling to other AJAX calls similarly (like verifyPayment, applyCoupon, etc.) wherever needed.



    function verifyPayment(order, payment,orderId) {
        $.ajax({
            url: '/verifyPayment',
            method: 'post',
            data: {
                order,
                payment
            }, success: (response) => {
                if (response.status) {
                    $.ajax({
                        url:'/paymentConfirm',
                        method:'post',
                        data :{
                            status:"Pending",
                            orderId
                        },
                        success:(response)=>{
                        }
                    })
                    Swal.fire({
                        title: "Order success",
                        text: "order placed successfully",
                        icon: "success",
                        showCancelButton: true,
                        confirmButtonText: "view orders",
                        cancelButtonText: "continue shopping",
                        reverseButtons: true
                    }).then(function (result) {
                        if (result.value) {
                            console.log("I am success");
                            var orderDetailsUrl = `/orderDetails?id=${orderId}`;
        location.href = orderDetailsUrl;
                        } else if (result.dismiss === "cancel") {
                            console.log("Nopppp");
                            location.href = '/'
                        }
                    });
                }

            }
        })
    }
    
    function showCouponDetails(couponName) {
        Swal.fire({
            title: 'Coupon Details',
            text: `${couponName}`,
            icon: 'info',
            confirmButtonText: 'OK'
        }).then((result) => {
            if (result.isConfirmed) {
                copyToClipboard(couponName);
            }
        });
    }

    function copyToClipboard(text) {
        var tempInput = document.createElement('input');
        document.body.appendChild(tempInput);
        tempInput.value = text;

        tempInput.select();
        document.execCommand('copy');

        document.body.removeChild(tempInput);

        Swal.fire({
            title: 'Copied!',
            text: 'Coupon name has been copied to the clipboard.',
            icon: 'success',
            confirmButtonText: 'OK'
        });
    }

    let discount = 0;



const applyCoupon = async (totalAmount) => {
const couponName = document.getElementById("inputCoupon").value.trim();
if (!couponName) {
Swal.fire({ icon: 'error', title: 'Error', text: 'Please enter a coupon code.' });
return;
}

try {
const response = await fetch('/applyCoupon', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ coupon: couponName, total: totalAmount }),
});

const data = await response.json();
if (data.success) {
  Swal.fire({ icon: 'success', title: 'Success', text: `Coupon Discount ${data.offerPrice} Applied` });
  document.getElementById("totalValue").innerText = `₹${data.gt}`;
  document.getElementById("discount").innerText = data.offerPrice;
  document.getElementById("inputCoupon").value = "";
  discount = data.offerPrice;
} else {
  Swal.fire({ icon: 'error', title: 'Error', text: data.message });
}
} catch (error) {
console.error('Error applying coupon:', error);
Swal.fire({ icon: 'error', title: 'Error', text: 'Failed to apply coupon.' });
}
};




    var usedCoupon = null;
const useCoupon = async (couponName) =>{
    disableOtherCoupons(couponName);
    copyToClipboard(couponName);
    document.getElementById("inputCoupon").value = couponName;
    document.getElementById('useButton_' + couponName).style.display = 'none';
    document.getElementById('cancelButton_' + couponName).style.display = 'block';
    usedCoupon = couponName;
}

const cancelCoupon = async (couponName) =>{
    enableAllCoupons();
    document.getElementById('useButton_' + couponName).style.display = 'block';
    document.getElementById('cancelButton_' + couponName).style.display = 'none';
    usedCoupon = null;
    window.location.reload();
}
function disableOtherCoupons(excludeCoupon) {
    var couponButtons = document.querySelectorAll('.use-button');
    couponButtons.forEach(function (button) {
        var couponName = button.id.replace('useButton_', '');
        if (couponName !== excludeCoupon) {
            button.disabled = true;
        }
    });
}

function enableAllCoupons() {
    var couponButtons = document.querySelectorAll('.use-button');
    couponButtons.forEach(function (button) {
        button.disabled = false;
    });
}
</script>



<%- include("../../views/partials/user/footer") %>
